#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

if which podman >/dev/null; then
    CONMAN="$(which podman)"
    if which buildah >/dev/null; then
        BUILDCON=("$(which buildah)" bud)
    fi
elif which docker >/dev/null; then
    CONMAN="$(which docker)"
    BUILDCON=("$CONMAN" build)
fi

CONREG="dkcr.nl"
SELF="$(realpath "${BASH_SOURCE[${#BASH_SOURCE[@]} - 1]}")"
DIR="$(dirname "$SELF")"
VENDOR="$(basename "$(dirname "$DIR")")"
PROJECT="$(basename "$DIR")"
IMAGE="$CONREG/$VENDOR/$PROJECT"

function volumes() {
    VOLUMES=(-w "/opt/$VENDOR/$PROJECT")
    for volume in "$@"
    do
        case "$volume" in
            src)
                VOLUMES+=("-v" "$DIR/src:/opt/$VENDOR/$PROJECT/src:ro")
                ;;
            test)
                VOLUMES+=("-v" "$DIR/tests:/opt/$VENDOR/$PROJECT/tests:rw")
                ;;
            phpunit)
                VOLUMES+=("-v" "$DIR/phpunit.xml:/opt/$VENDOR/$PROJECT/phpunit.xml:ro")
                ;;
            coverage)
                mkdir -p "$DIR/docs/coverage"
                VOLUMES+=("-v" "$DIR/docs/coverage:/opt/$VENDOR/$PROJECT/docs/coverage:rw")
                VOLUMES+=("-v" "$DIR/coverage.php:/opt/$VENDOR/$PROJECT/coverage.php:ro")
                ;;
            vendor)
                if [ ! -d "$DIR/vendor" ]; then
                    $SELF install
                fi
                VOLUMES+=("-v" "$DIR/vendor:/opt/$VENDOR/$PROJECT/vendor:rw")
                ;;
        esac
    done
}

if ! "$CONMAN" images | grep -q "$IMAGE"; then
    "${BUILDCON[@]}" -t $IMAGE -f Containerfile .
fi

case "${1:-}" in
    build)
        "${BUILDCON[@]}" -t $IMAGE -f Containerfile .
        ;;

    update | require | install)
        "$CONMAN" run -it --rm -v "$DIR:/app" composer composer $*
        ;;

    test)
        volumes src test phpunit coverage vendor
        shift
        "$CONMAN" run -it --rm "${VOLUMES[@]}" "$IMAGE" \
            php /opt/$VENDOR/$PROJECT/vendor/bin/phpunit --coverage-html "/opt/$VENDOR/$PROJECT/docs/coverage" /opt/$VENDOR/$PROJECT/tests $*
        ;;

    check)
        volumes src test
        "$CONMAN" run -it --rm "${VOLUMES[@]}" "$IMAGE" \
            find src tests -name "*.php" -type f -exec php -l "{}" \;
        ;;

    bash)
        volumes src test
        "$CONMAN" run -it --rm "${VOLUMES[@]}" "$IMAGE" bash
        ;;

    php)
        volumes src test
        shift
        echo "$CONMAN" run -it --rm "${VOLUMES[@]}" "$IMAGE" -u 1000:1000 php "$@"
        ;;

    coverage)
        volumes src test coverage
        "$CONMAN" run --name "${VENDOR}_${PROJECT}" -d --rm "${VOLUMES[@]}" -p 8080:8080 "$IMAGE" php -S 0.0.0.0:8080 coverage.php >/dev/null
        echo "Goto http://$(ip addr show eth0 | sed -n 's/^ *inet \([^/]*\).*$/\1/p'):8080"
        ;;

    ""|help|--help|-h|-?)
        echo "Usage: $0 ( login | build | update | require | test | check | bash | coverage)"
        ;;

    *)
        echo "No such subcommand: $@"
        ;;
esac
